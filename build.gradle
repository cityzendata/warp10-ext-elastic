//
//   Copyright 2018  SenX S.A.S.
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//

// Apply the java plugin to add support for Java
plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
    id 'eclipse'
}

// In this section you declare where to find the dependencies of your project
repositories {
  	// flatDir name:'ExternalJars', dirs:'./lib'
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    
    maven {
      url 'https://dl.bintray.com/cityzendata/maven'
    }
    
    maven {
      url 'https://dl.bintray.com/hbs/maven'
    }
        
    maven {
      url "http://nexus.bedatadriven.com/content/groups/public/"
    }
    
    maven {
      url "http://repo.opengeo.org/"
    }
        
    maven {
      url 'https://repository.apache.org/content/groups/public'
    }
    
    mavenCentral()
    
    mavenLocal()
    
    maven {
      url "http://maven.twttr.com"
    }
}

configurations {
    provided
}

configurations.all {
    resolutionStrategy {
	    force 'io.netty:netty-buffer:4.1.5.Final'
	}
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.13'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.7'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7'
	compile group: 'io.netty', name: 'netty-all', version: '4.1.5.Final'
    compile 'org.elasticsearch:elasticsearch:5.0.0-rc1'
    compile 'org.elasticsearch.client:transport:5.0.0-rc1'
    provided 'io.warp10:warpscript:1.2.4'
	
    // Declare the dependency for your favorite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    
    testCompile 'junit:junit:4.12'
}

sourceSets {
    main {
        compileClasspath = compileClasspath + configurations.provided
    }
}

eclipse.classpath.plusConfigurations += [configurations.provided]  // Eclipse users only

shadowJar {
    classifier = ''
    manifest {
       attributes("Implementation-Title": "Warp-10 set of WarpScript Function to connect with ElasticSearch")
       attributes("Implementation-Version": "0.0.1")
   }
   // relocate 'io.netty', 'shadow.netty'
}
